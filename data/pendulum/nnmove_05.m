function [Y,Xf,Af] = nnmove_05(X,~,~)
%NNMOVE_05 neural network simulation function.
%
% Auto-generated by MATLAB, 25-Jun-2022 23:41:54.
% 
% [Y] = nnmove_05(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 2xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.76604557575478;-4.87583803210117];
x1_step1.gain = [0.430101094601667;0.141297483334848];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.3843145915188861395;-3.5074627416668184843;1.8706756037847072083;0.94393471881890678166;-1.0497074753605242226;0.41607072210911771881;0.80344215824267695147;2.6349479650072509251;-3.4172450255614004178;4.6159585205173279121];
IW1_1 = [3.8448999435303234939 -2.2126072465310171467;3.7897707404568836687 -2.019497001953898252;-3.2839206262631548405 -3.017883273425896018;-4.1287132866915143836 -1.7620564036422576848;3.2579845081984126764 -2.6564732327384810162;1.9029153845496646902 -3.7086869708084440056;4.3036295721292230354 -0.0050311283956290669961;3.8921187158047332311 -1.7910293815075939428;-2.7703982914159377415 -3.3156260703224735842;1.4106489656247866993 4.0657872662430394328];

% Layer 2
b2 = [-1.7250786767107628705;-1.4158170505933540539;-0.94342968793515369352;0.55282705229365391997;0.14008122548869722523;-0.11974873282679189546;0.7899669928008579145;0.82240836764721514385;-1.402599594387111237;-1.7695672150092274233];
LW2_1 = [0.29020159040121418226 -0.36890498995199011434 0.70896960620457405433 -0.61453628006491578528 -0.43149855826610661325 0.78407069378098936951 0.66224818624086334573 0.34661168791292951141 0.88530669825022711983 0.29020152071129856619;0.55427912751311014805 -0.44237105621944156075 -0.90149653139736873886 0.049205718210296914283 0.85325343421659516352 -0.46956552198763934491 0.49417711814968606765 -0.14831994759090211256 0.16966984889644454171 -0.6758471093265191465;-0.12122707240701655063 -0.014303036552607322623 0.52591999840967240676 0.99625544008100741511 0.3823674789747225633 0.43379846750323552973 -0.90527810029434951922 -0.21769910400368380765 0.8631502030517762547 0.97411994997890338777;-0.18678647286638008773 0.89982816413405841693 0.49643169957192473385 0.67278860688497044151 -0.98460349741178754268 -0.040008012187320154962 -0.18874411512498176502 0.057848042167735605479 0.16273331686606906654 0.39919629929915784183;-0.010462363089425242083 0.96164098574749878878 -0.63082991937151555728 0.12839389652768057326 0.0068941600365415908053 0.73042297578937964708 0.073886751670235742417 -0.84069943145597048062 0.76540555794143172452 0.28842810239988642129;-0.51830160600341013133 -1.1714542360858262171 -0.40195036580558940464 -0.35375982575011427622 -0.70881761201470772082 0.039503456617035186127 -1.0595879070747074024 0.17464738839869339837 -0.18259798034411514611 -0.15782730613422452093;0.16620318169659184515 0.044189824808517193244 -0.75267306295783209524 0.89890072687619060332 -0.058772593788276511484 -0.24415621675095039445 0.42503839529591652679 0.62736247107858733596 -0.77240182569107840305 0.49667700273369747022;0.95583668177982428205 0.71961554277701744731 0.49874931753499618381 0.0023470123448271484889 0.95916680077585325659 -0.23186754115317051439 -0.57801343564311857826 -0.076950036783857256317 -0.49083308371007400295 -0.23931345559890077057;-0.46596791379055069182 0.38045118685973622341 -1.1313212870575688473 -0.0099700235955378201796 -0.20014460484218840608 0.27734568323003977453 0.023436364783359104474 0.10068426368023379591 0.29941615428405599086 1.1149048784675124057;-0.041810868593507480306 -0.77209053477228384299 -0.47373780934827186551 0.46470319865384990266 -0.89534213289675668168 0.36683555575505288893 -0.89553801230200191785 -0.19503602816348142301 0.12619367081269897146 -0.84285445088299193461];

% Layer 3
b3 = -0.095592875311705946539;
LW3_2 = [-0.30821365459572669376 0.43651632049460703522 0.61476218624937351009 0.044986421824729366792 0.031106142341961011411 0.48260410784026280817 -0.048699020069763197804 0.021653743387446470342 -0.16200559033773129225 -0.43130437486121597779];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 19.9999999999995;
y1_step1.xoffset = -0.0500000000000007;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
