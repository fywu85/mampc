function [Y,Xf,Af] = nnmove_00(X,~,~)
%NNMOVE_00 neural network simulation function.
%
% Auto-generated by MATLAB, 25-Jun-2022 23:41:53.
% 
% [Y] = nnmove_00(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 2xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.82154096513822;-9.2219833326487];
x1_step1.gain = [0.35816050845051;0.104804302639463];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.4271887242357310654;3.4433690077389016437;2.4595492912420731102;1.4757295747452436885;0.49190985824841454432;0.49190985824841454432;-1.4757295747452436885;2.4595492912420731102;-3.4433690077389016437;4.4271887242357310654];
IW1_1 = [4.3539668669469353546 0.80185567375200839102;-4.3662928267351031053 0.73176973919504584298;-0.00023654665125125146205 4.4271887179163345039;-2.9933732206945800058 -3.2618578696240825288;-0.3548956099536585973 -4.4129410947842506729;1.7093769132749643269 -4.0838744555094432798;-3.602383635338564094 2.5734863791838709091;3.7003947988662653223 2.4304481752391864369;-3.3657731045579417639 2.8760339720932357466;1.6900203389569674606 -4.0919226842539169198];

% Layer 2
b2 = [1.7624955765118339723;-1.370829892842537312;-0.97916420917324109574;0.58749852550394465744;-0.19583284183464821915;-0.19583284183464821915;0.58749852550394465744;-0.97916420917324109574;1.370829892842537312;1.7624955765118339723];
LW2_1 = [-0.15042322039038547032 -0.07494227190488718382 -0.93867102186851725243 0.85224406423561949175 0.79396765892306797596 -0.29638015100816117453 -0.0017024776991046586955 -0.086868006974772121742 -0.29639292867322225566 0.81061728392096110696;0.2040717758748512578 0.28357065743332560137 -0.63966595973770079553 0.79085466528661307883 0.62984763141975375067 0.68747427440374808683 0.65143516777936261164 0.758854324390401902 0.19026970352279953813 -0.20964319161068695196;0.24643064818517007586 0.75663440717324648155 0.73067604985897394165 -0.31008749997181950242 0.3849136747248366186 -0.32120284764430989677 0.58651484127376696254 1.0870139467456565452 -0.16363485047738204892 -0.19854487954720526077;-0.50039557961230696215 -0.64778641126715863496 0.13129064373384188857 0.96817162124404276824 -0.62211673481716422973 -0.042806522334276099484 0.97921124101556888952 0.23903525256742122473 -0.20620362134332709259 0.18547262639335210244;0.65075656414462201838 0.58200768139536385171 0.5065296204035277805 0.20778605676623573828 -0.613725296070527504 -0.60405693782218428112 0.70359906334685484719 0.19308715626169586921 -0.49564905725037611273 -0.72448637360111900474;-0.21671426309876587468 0.76998379087833623835 -0.49770530139551377724 0.61416488540154212661 0.088782479688366514048 0.0572802570896981042 -0.095437826190721081199 -0.70924798133222188845 0.74253852764010552789 -0.8757702749047969748;0.87580980571551780844 0.89363635446890798963 -0.88039310351595401194 -0.031894715713828680759 -0.19363022103622520853 -0.52370731436904949252 -0.47875075342906325826 -0.18211042099773036562 0.33021481052358353514 0.28545103563090762355;-0.47040161278576531068 0.6109309627696688505 -0.60584694861064025684 -0.70281216806785751228 0.40646744641477533522 -0.32670081050836274894 -0.69055618891978620688 0.70651368306937234465 -0.63130877654302697266 -0.065965593872111871754;0.69605972577910846244 0.0084644388869490570781 0.33086936486211254715 -0.098689167447544259848 -0.26729473908131667903 0.079585736045537952554 -0.53694510720239474466 -0.71080210389203879462 -1.0363665335017471225 -0.74647179621191939169;0.5724763056041095588 -0.8198714163525041565 -0.80438957293819801642 -0.30080571558342367178 -0.38922746759119064563 0.012584299607464023707 -0.11326427829222970867 -0.54680398633270588249 -0.80740412745488432389 -0.50355191038541102788];

% Layer 3
b3 = -0.056639073521615790341;
LW3_2 = [0.38714824732019370579 0.49483430095789393555 0.086668569037022358259 0.051712571862546630186 -0.18657116719181421338 0.11394462987521336572 0.46126179835111669192 -0.4129763124371035321 0.5691102396648937134 -0.84836224133603965747];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 19.9999999999994;
y1_step1.xoffset = -0.0500000000000016;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
