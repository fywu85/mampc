function [Y,Xf,Af] = nnmove_07(X,~,~)
%NNMOVE_07 neural network simulation function.
%
% Auto-generated by MATLAB, 25-Jun-2022 23:41:55.
% 
% [Y] = nnmove_07(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 2xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.76604557575478;-4.87583803210117];
x1_step1.gain = [0.430101094601667;0.141297483334848];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.1879731346881508003;3.1082270737004651373;2.1547571251656698621;-1.3590079817151416997;-0.22499166752445959316;-0.84851965227200976116;-1.8209827940895793041;1.5148302253634495784;3.144914879168120958;-4.2231043470604738843];
IW1_1 = [-3.0719175084924867924 3.4522440479088576382;-4.6673836588353738719 -0.29718293480683133367;-4.1163084261238447326 2.0444751280898048051;3.72147274314188925 -2.153514753239441859;3.1412612706817291119 -3.0117592062962454946;-4.0194272096678842487 1.6421523833184148433;-3.2318403251892182659 2.8815542735946264585;1.5243262940186692589 3.6313062708468746287;0.32176964899441612422 -4.2306494522953643767;-4.1096227364202926324 -1.9493224284351950981];

% Layer 2
b2 = [-1.6910149842385149288;1.3738944788593836499;-1.0803626585526364678;0.69820021551742417198;0.097036226803066810698;-0.23463869558904451584;-0.6100762629924840752;1.0484253498558859796;-1.3225953869712754329;-1.6484346341491187271];
LW2_1 = [0.45383812825820168957 -0.0038129827479428668457 0.83067441901566552165 -0.89822821144017983563 0.79855988502561903175 -0.44883542599203424261 -0.29250745158088548026 0.30510644294907635077 -0.14010027601544855491 0.69137378378821567892;-0.67972115168456426204 -0.11777258509520238672 0.78399512536089932535 0.066032417855483721558 -0.63074176437922879757 -0.94376090630687303751 1.5144393142919994055 0.45448705916142007055 -1.2627744532598841332 0.15601995311136621081;0.080621169995718319767 0.79060018214930705138 0.64204069945067154812 0.87656055840091706699 0.7642419743876063265 0.40420065683869760287 0.31637891822227331984 -0.25141400396627094915 -0.49921203742927688918 -0.5770640206168123898;-0.15133489175145575789 -0.069608948432820783037 0.25179294137856950142 -0.0043181516480838740002 0.63433742016987648693 -0.80177755859217558765 -0.59125268707650824318 -0.14858532181871431099 -1.1128076217148670235 0.23455885452301408756;-0.38653263209151389468 0.37875322703905522914 0.80155657145734038327 0.21360787188792487723 0.8591188221643057954 -0.13456131325447134861 0.50347516919551182912 1.0553024902613989955 -0.17218316723230064902 0.0028925004517617730615;-0.63494380998866106758 -0.76665080150805564596 -0.34934696263399855898 0.66961816905255133747 0.053654244477422480264 -0.20118413396346115918 0.11581651486729556411 1.3396449296810912788 0.26574578377267049634 0.13703528385337851447;-0.87885629204854731622 -0.64135343457882920681 -0.072163041511479411594 -1.2261963399726829582 0.095076859245934161602 0.23655498943680705604 0.46452810308498670988 0.26211283973239335454 -0.52484159935353114079 -0.085483891192473557274;0.20599382766400695099 -0.54384894720085841247 -0.36040398828697051137 -0.6499591758028987476 0.84041015884569947314 -0.59233088054450711013 -0.39537186832034521 -0.20267307317464547389 0.5180595595780581597 1.0392404187107142643;-0.0069422124216260393259 0.27846794584571799014 0.61137205655700888052 0.90812021090298011838 0.32834418192221581645 -0.99961349141883781844 0.13050745701336349813 0.36924033892954288838 -0.92207313040537475235 -0.91415486922075794851;-0.27378445574062226786 0.33214945762899888981 0.31774605142219769505 0.40978456797858542338 -0.99364566047240943103 0.17259893022788613814 1.4437905642817994156 0.5113917544846754426 0.75057726872772989601 0.33019383789784023664];

% Layer 3
b3 = 0.20271525252148592244;
LW3_2 = [0.14070839235058460459 -1.3242057729028606783 0.30497020720519646408 -0.44832362399639968942 0.51191514915646885164 -0.46958246848233531345 0.66329881127473666602 0.45896362179595373565 -0.94991892245789932847 0.93552322749615945963];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 19.9999999999995;
y1_step1.xoffset = -0.0500000000000007;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
