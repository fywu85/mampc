function [Y,Xf,Af] = nnmove_03(X,~,~)
%NNMOVE_03 neural network simulation function.
%
% Auto-generated by MATLAB, 25-Jun-2022 23:41:54.
% 
% [Y] = nnmove_03(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 2xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.73448219682609;-1.03417192584762];
x1_step1.gain = [0.639702923596193;0.199475211979442];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.2926292950957956052;-3.9011953588052050712;2.5137584431899808735;1.3499513333749475485;0.78984082437717884062;-0.30747603052618810437;-1.557215749191395826;1.984857175616583147;-3.4401854249789907136;4.4568103058186672172];
IW1_1 = [-2.1851922834014798624 -3.9867365714935236731;2.8818437531483382941 -2.3995583464262102424;-2.6135276345574234291 -3.5755922328636735585;-2.9927892276004977035 3.3054888393202532804;-4.0009301310393547979 1.0590896086849437285;-0.97259689050840369973 4.3571085533303062221;-3.3771363448891102976 2.8444211946070199204;3.1390697827747189308 3.411956715430782161;-2.2564321151911244101 3.8134996713056286133;3.3869951843339389796 2.8108926216905945061];

% Layer 2
b2 = [1.7451390135960354044;1.4115588044327389561;-0.99517372758690636481;0.49563190925120803598;0.2251188582155801976;0.1961523337445337245;-0.59822893786083497503;-0.99353231373150396877;-1.370721200786100713;-1.8406636173062904671];
LW2_1 = [-0.36623933087282722898 0.36691742756493578304 -0.17502975710901491624 0.53036440761616454598 0.55695282764156239796 -0.3379340811996141003 0.78145449106203890288 0.41176155848801399006 1.0161171664361996481 -0.65793408910315887006;-0.92001136197751653967 0.7523433950468264575 0.19559254265926187544 0.27661082606677722673 0.42127318871705665693 -0.36132429099536278461 -0.52772657053916005587 0.1437766067747518195 0.49062724485711578515 0.56979212697905656793;0.45288679696686945375 -0.23283875473393392252 0.64224061209347771406 0.51526138171034630009 0.72188485008023595135 -0.82009145817339446083 -0.12093484235535206794 -0.086221742373253668079 -0.88032148254536568555 0.3519198090145390645;-0.088255877282342187762 -0.38316501106011302547 0.34337731976510466048 -0.27669542562492099869 1.0098795619839457949 0.19039234182328867995 -0.72879022722096997722 -1.1075466275808867334 0.62804299631662052761 0.86625062002987984755;-0.12560739254062977532 0.84614729036639946269 0.6900998892187382161 -0.52264918582040098549 -0.39369343997816597103 0.5197303362830867357 -0.62215746377465885875 0.021010103733685166899 -0.86773313701465204506 0.47739225958461534161;0.95614416418294922995 0.62255324627119412728 0.25838539237223939748 0.2507506132842873825 0.43484525965853981777 -0.98720700460923205277 0.89605121234219609061 0.040697957253525873789 0.13401997676679397453 -0.047261515190228392536;-0.71746645420125221282 0.6385233670127126171 0.0043755441005812649793 0.67124207448215245098 0.1723017871321154415 -0.28354075982418858182 -0.65273170557068771469 -0.74142439238830459836 0.6023065993762978243 0.5241535986986307627;-0.21177298418647227951 0.69083169561173118911 0.3981065006363738723 0.49551358128066108621 -0.70817877880472035468 0.74827191584178043282 -0.17818460266361246802 0.25714378065550241859 -0.7618834168461180445 -0.69825790648780439174;-0.5514100936676021858 0.67204710780951226745 -0.70764040194976340903 -0.23014720602776098102 -0.47958623609501777052 0.5943591186735905918 0.13908026953566138273 -0.64736133630969117103 0.49143347931819758578 -0.7304087541333439404;-0.83202364820059415695 0.86430910463248922238 0.57513950974445460229 -0.2926269571041530404 -0.21954554527050640367 -0.71236122652770395014 -0.42355715558933615394 -0.04170949291851568097 0.54914513539313025703 -0.3491373795440624872];

% Layer 3
b3 = -0.43396945650689455753;
LW3_2 = [0.22056964037822254787 -0.45163324841300528378 -0.15174450315925702704 1.0489008921981644029 0.49283327787624431338 0.51916373793465930842 0.04618255738290340251 -0.26565015109655093495 0.20823652794613928263 -0.30056552950728659956];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 28.0871062138483;
y1_step1.xoffset = -0.0212070508357982;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
