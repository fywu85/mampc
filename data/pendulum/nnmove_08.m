function [Y,Xf,Af] = nnmove_08(X,~,~)
%NNMOVE_08 neural network simulation function.
%
% Auto-generated by MATLAB, 25-Jun-2022 23:41:56.
% 
% [Y] = nnmove_08(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 2xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.76604557575478;-4.87583803210117];
x1_step1.gain = [0.425642043200552;0.141297483334848];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.711295482399569412;-3.2871489054798264107;-1.8442757680437911194;1.4280585022218752478;-0.81897531860484040767;0.3851315903703866339;-1.1917713440461206176;-2.0899205132685376718;-2.9679611633755325073;-4.5167107484779442927];
IW1_1 = [-0.27489721310285264444 4.8225343730051291047;1.9384512296183473712 -4.1293861868607502075;4.0750912535565690931 2.4246342871760626636;-2.1147344377298673557 -3.1392820033847383954;3.4214433422077039637 0.83905941369849001976;3.3824800063340658696 -2.4452179733528565109;-4.8334186969138484002 -0.25080133292424139357;-4.5161636334460606435 0.88043292181340182534;-4.0273926042484404775 -2.5135202341630287215;-3.5436947517025010335 2.4923437828867789356];

% Layer 2
b2 = [1.8907298844939954829;1.4682390258266708738;-1.0322396310725152624;-0.45138422345952178283;0.27924942280303460818;0.22448837679647090648;-0.5324773560427246144;1.0932342947976050329;0.96113251962207879586;1.7751266930710529746];
LW2_1 = [-0.64114413307639417372 0.79018037035267729706 0.68139660820067349256 0.29288450289013562289 -0.30116779912225133398 0.45056037772144474918 -0.48045338957998828811 -0.017937692923749835178 -0.82286037485826490911 0.2881959617087329617;-0.28167492007399919096 0.068691870762761092495 1.1142833325405780975 0.42699805840926124967 0.39566265418145263322 0.48628172687599141577 1.9406733698250639986 0.17534530995308059143 -0.090629165733089392387 -0.27362192846837080085;0.52647722842474076188 0.53831433802094230678 -0.56540314712379169393 -0.084334178025050735017 -1.6158288462451642076 0.48166774320258948228 -0.62839924908438682394 -0.061399121744115318922 -0.45434476347240920768 -0.24395322061340177222;0.71181295704070512986 -0.65660415296603824586 0.67278021013023492358 -0.60653731664489174413 0.14689362690591672989 0.57657327789379708705 -0.018084519530905927148 -1.0905996395246293496 0.56885691359165713177 0.22797404961352110697;-0.89023147153936466047 0.50923863619247300427 0.18950709429743597956 -0.3996540149262540198 -0.0010872143618694948483 -0.84699502164363837942 -0.63295774734371279546 0.19025042184131113476 0.40359489381091856464 -0.49951955976558398698;1.238773444244444466 0.64637422236666175479 0.038122359861366840461 -0.39697924578859944411 0.42423914234495269104 -0.44697750190724366837 -0.16991968704094864706 0.2389548987888943099 0.71730496081700390043 -0.76648896730621385309;-0.17328923759459205489 -0.93540384878803195523 -0.090844641849272822487 -0.53100314041400742404 0.23374179147488460817 0.065277054264854736387 0.32632575587859130595 -0.21057347764010736491 0.84514798759805664918 0.92809121969943120245;-0.049836618955587635993 0.58860034243553926991 -0.57762936874624759565 -0.4858485087482975473 0.50090662769976279645 0.064952740695064820065 1.4543024038545226961 -0.1876078934715338653 -0.30784041708326503883 0.65399939692265462998;0.78979220056970267372 0.42651673613725110679 0.77814132806125857478 -0.53402546289881003272 -1.4614338838960272415 0.037998700104818948498 0.24375861977095136801 0.23272705752786668199 0.047481027652114760063 1.0799115644745622689;0.10154311541010463404 0.13362692368775444529 -0.17267914708367734788 0.67156004403886504495 0.19986271950418155186 -0.6313628534349535748 -0.80238531594321083062 -0.71747740905603696326 -0.79500102837466890549 -0.62932954057970624806];

% Layer 3
b3 = -0.11130066626616445802;
LW3_2 = [-0.38092011116821211658 0.78022406888261908176 0.86249435018554210242 -0.41479804335528114301 -0.023177776993058382682 -0.38185900230177360903 0.2352255002527022798 -1.1260969414474162331 0.82239841992379547619 0.13724066843213761357];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 19.9999999999995;
y1_step1.xoffset = -0.0500000000000007;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
