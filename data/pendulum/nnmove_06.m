function [Y,Xf,Af] = nnmove_06(X,~,~)
%NNMOVE_06 neural network simulation function.
%
% Auto-generated by MATLAB, 25-Jun-2022 23:41:55.
% 
% [Y] = nnmove_06(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 2xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.76604557575478;-4.87583803210117];
x1_step1.gain = [0.430101094601667;0.141297483334848];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.0070505368053357387;3.3859061676982480371;-2.9831930698785948941;1.9291247200878642865;-0.67617072141868650448;0.12285951896803300187;1.4812045728305840431;-2.7901915190012438472;2.896080981170369828;-4.4162736979369530133];
IW1_1 = [-4.2590162346294322404 -1.409854724891467681;-2.587010942362183652 -3.6109251686242016532;2.7801616497289294294 -3.2409353755504439754;-2.5507281126774237201 3.5937976382444696277;3.2982632222601124816 -2.561479394508866303;-3.7578974960897957303 -0.91662437476636926537;0.9595925313361566289 -4.3256024303971081224;-1.6774478734901254739 3.9364396398734240456;4.5534814452391421113 -1.0340319337888190798;-4.266568785700661337 1.2079421366656297732];

% Layer 2
b2 = [1.7142417040081769919;1.3169649534727800866;0.8730970886462703362;-0.37282584305632054944;-0.12170873673304247187;0.066931258420867098535;-0.70588899868384391567;1.0024600234331546567;-1.3779594901957321618;1.7016931344513765989];
LW2_1 = [-0.87545484485002678099 -0.25024265518012189791 -0.065546866822353125337 -0.085079080812655888399 -0.84578203119169848012 0.90705593404896378562 0.72219905447678156563 -0.37834385577966755942 0.7859213244182912117 0.57751198539933101817;-0.82651760196904489053 -0.0015728036525957606387 -0.65039409295950256773 0.2127187433046331122 -0.6111465100885413726 0.79746348214639306562 0.18702697270010912312 -0.65590754969624820436 -0.68351434784763753782 0.81431108649234984487;-0.18795287619874287421 0.79330262032634601965 0.16571394562611077572 0.46881548822006369193 0.9690483537766250155 0.0026064008963273162245 0.25821003977866896495 -0.82741712324852545457 -0.66660665033167609828 -0.24539991761520724145;0.88335864714781497931 0.70790389251209617782 -0.41862481080041574755 -0.55778409408057949559 0.4557913249256072552 0.25899095829818080672 -0.36037189933847990631 -0.53992902327582015243 1.0291299852064685894 -0.25152798756955102588;0.60902178261838291196 0.93735498359603286467 -0.33018902878453981753 -0.23181491721339300693 -0.67203038688323579741 1.2400565941353147714 -0.040917195992881752464 -0.1355004603560457932 0.8593711453991879079 0.20891197991114907051;-0.11709181742537091986 0.65875718734396515597 -1.2092418185489415272 -0.73535948237073478495 -0.29298917969341697898 -1.3878371479532514154 -0.26860038580280010123 -0.74209060620567934841 -0.35397866596093685576 0.65901415919649031228;-0.6236812558398145967 -0.22348739259473254792 -0.65578875835738958955 -0.67058618665760294508 -0.0075441955481683753426 -0.53386211626031143673 0.60448511996746423502 0.11741375690294303391 -0.65886316315344350958 0.87233886788751779928;0.44733636040971030967 -0.11960368234271502585 0.3232394905397199536 0.059270227721189908121 -0.88235438237258645433 -0.49950457658381175463 -0.39979466521123918632 0.53465868108579706064 -1.2049894457254759494 0.34048647987950542149;-0.71069140386557139166 0.009919016001847436384 -0.43328478061784303499 -0.48353690744243815747 0.63111130578550689307 -0.60339884092458262455 0.27125730428176381137 0.57466404262276771231 -0.76553406971109960732 0.6645871600710000493;0.33463506530609798961 -0.59260037411643229355 0.17898664312176904012 0.41771378212671528285 -0.40866586723561160177 -0.3670105780386677119 -0.95595758273254516357 0.56484096973905517647 0.61165536443230672514 0.8886653356983359453];

% Layer 3
b3 = -0.075561018817655173363;
LW3_2 = [1.2565302999038814313 -0.47113437326181328846 0.72156911856310379516 -0.63110812104197133721 1.131649107667800358 -0.95611069490543865168 0.80562483641855209271 0.21079332519291782422 0.29051870015861602781 0.17775875402846874618];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 19.9999999999995;
y1_step1.xoffset = -0.0500000000000007;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
