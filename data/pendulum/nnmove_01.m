function [Y,Xf,Af] = nnmove_01(X,~,~)
%NNMOVE_01 neural network simulation function.
%
% Auto-generated by MATLAB, 25-Jun-2022 23:41:53.
% 
% [Y] = nnmove_01(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 2xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.13916555661584;0.0131423206553078];
x1_step1.gain = [0.951712085996925;0.323467029718403];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.4373128512154638159;-3.1730151043354202223;-2.5294741215562965841;1.6427849863841361699;0.48543424379611749275;-0.4171867480781374371;-1.4870993292256871054;2.5359467125512997754;-3.4095050922049856545;4.4263386891054148364];
IW1_1 = [-0.94196199799073132564 -4.3148948961923849765;4.4926429544831210094 1.1298914141815989964;0.54799636893982817121 -4.2718390273117918809;-0.3848312551127498482 -4.37677337939310096;-4.1182462206131082993 -1.4662245390167625292;-3.7519693499993862496 2.2411108811100248772;-3.3409560701713920672 2.8417731121026466035;3.2770313045495043092 2.9490105120503868896;-2.2848878462960282576 -3.8402965829002631004;3.3186418490981464124 -2.9307235259924957482];

% Layer 2
b2 = [-1.5006963619535396148;1.4029324065439103819;0.95936425448473139355;-0.55073608171783672294;0.20324646563996953685;-0.026212313594142729045;-0.59846894565211095074;0.81854033842236118002;-1.3860491477955634299;-1.7605856848975143247];
LW2_1 = [1.0978912101476501206 0.11402913339501356826 -0.30655783351947979432 0.69420706752354044422 -0.080982587854045273712 0.51652837870838097523 -0.83784562761601333314 0.2666051514086997809 -1.0973089196934080469 0.25502695507380312989;-0.3862453720955645875 -0.3874362429868317137 -0.28299892798387016324 0.2511331750166068133 0.58392636353428140072 0.16172529134814733753 0.53778842801375670302 -0.8942585077935775173 -0.18290930436211050303 0.12166086128226102914;-0.7925407146984543294 -0.52481439570073784573 0.2047702956186170653 0.40544578209407000635 -0.80772620963830166207 -0.14116758174821042449 0.94754092456427962965 0.18606241692799815879 -0.11830202453810949315 -0.63546657429811881368;0.60915670654816156393 -0.40032342740740128884 0.15965311500806511624 0.99339231825672313914 0.31237024770864363354 0.23432698860276460207 0.44588040098794584631 -0.21826089872143347725 0.57174134286742517297 -0.84901296841569851015;-0.37580628891642919864 -0.50028335294288639457 0.50182148006939863993 0.82994191516327231462 -0.53895814183590873281 0.23893959223455615848 -0.067129631592697636133 -0.82753003830324245449 0.86850116962376755492 -0.018919033090943081221;-0.14598581293796972225 -0.23051178412783682181 0.3240709593494995322 -0.34924976853764105877 0.3357409353651881756 0.56786305437945649999 0.6689815920777658631 1.0801232763677222071 -0.64132458272807046917 0.85306232534048986871;-0.78680979495476166541 -0.68435757018702703114 0.56224247309962949171 -0.56242942320174038606 0.055346358023626140987 0.53432774811584760055 -0.65155137423918130235 -0.57304138992910258477 0.64904800406884577413 0.19567591621422245063;0.036619409100185837391 0.44043130353098852714 0.4716384344393484418 0.71638736691126370104 -0.18331733535195912643 0.82179503356611027787 -0.15292350230552109736 0.094433795814380994127 -1.1874977964498718563 -0.30310316949946913834;-0.11448827075718713553 -0.81024510174446262578 0.70448760680549904478 0.29965542862104177502 0.27623247861517968849 0.019707422667479615463 -0.85585043637988778009 0.68765554574149634348 -0.32438347007224477281 -0.66500623405243786124;-0.66774209356845959373 0.7173136807852996677 0.21387948123199415629 -0.64333329440618292061 -0.10646751143876106993 -0.89482317676481293311 0.17956237951020728727 0.36313975010200949534 0.45237751900910894154 -0.70807139523919737645];

% Layer 3
b3 = -0.27700234612659763167;
LW3_2 = [0.86561044138095755152 0.96536013091093608729 0.05565010926855325224 0.30255501525700795318 -0.0019061420435328799844 0.4590165363140025212 0.64266800530558787496 -0.69188193783348450605 0.23967198029677475035 -0.42186454906825343603];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 41.3156398709898;
y1_step1.xoffset = 0.00159218140527258;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
