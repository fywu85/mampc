function [Y,Xf,Af] = nnmove_11(X,~,~)
%NNMOVE_11 neural network simulation function.
%
% Auto-generated by MATLAB, 25-Jun-2022 23:41:58.
% 
% [Y] = nnmove_11(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 2xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.82154096513822;-9.2219833326487];
x1_step1.gain = [0.35816050845051;0.104804302639463];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.4258671731473100408;3.4673165801170129363;-2.2160773332868881624;1.6652127277188695231;0.75072910731138198237;-0.80231002617388580411;1.3514063184952898045;2.5029080274994979227;3.3155554570793119851;-4.3594252720412969282];
IW1_1 = [3.2604848102361865259 2.9947422646554171521;-3.9443018214574410152 -1.9182623229865238823;4.3136155200814441102 1.4676420783065471376;-4.3406101214151426859 -0.83821898040921349882;-3.9573751297164192486 -1.557973753029593178;-4.0665402240347123808 0.96694668966345476147;4.2533766593139707979 2.250160156056909333;3.9300290580967933707 -1.896112875276335652;4.4055840881578722801 0.58440052538824016626;-0.94703258673359913544 4.4051116121999003283];

% Layer 2
b2 = [-1.7365538687951727059;-1.3482280633315497642;-0.85691080427286092647;0.59702526380041320841;0.31790722900032919451;-0.13968512246063605198;-0.70300540503742936504;0.93171326073125171341;1.4641242751054865945;-1.6118454367131347382];
LW2_1 = [0.67570051103463069087 0.83114089810868019281 0.12744603062003501126 -0.00020873998539998409865 0.78784330668959179356 -0.81414995962920766459 0.16646654599504298599 -0.6011492112574520208 -0.50280325640288592304 -0.37334534368616506539;0.76210633175661479655 0.81859418775055936557 0.10614390732119594052 0.14532281315141165612 0.60518174205146679778 0.66067005511509191429 -1.6846062630890803469 -0.43919098718217464139 0.33408665160900197222 0.17036191506459022471;0.19121769269726321405 -0.18378510567035008516 -0.40715305221781045164 -0.84901898534147124398 -0.53615021058844047896 -0.72945042667098769495 -0.46353101527913148638 0.27808745433027509675 -0.18952260617268409937 -0.76156854424786624147;-0.17255532595276890095 -0.1027706368200234921 -1.0010207287444241597 0.85456403075482034737 -0.32061123742659403124 -0.073967256677523185449 -0.034502791343686632641 -0.64809071494707526373 -0.89234376053641628612 0.034591547856393616012;-0.22976762509095183251 0.63567773403726668402 -0.55874383103899327718 -0.11514080428922401911 -0.73077514815080613086 -0.40385000869388021361 -0.063644453898676553449 -0.93985732150574496924 0.56928506803537126668 -0.79099152314839826783;-0.78517341618964364702 -0.53611800932437214673 0.57491862958417716545 -0.21713278160724389099 -0.41959970517674510804 0.16108074075292982963 1.030068103343015018 -0.7173105103886776579 -0.40588716144879666281 0.43871735661850908006;-0.15044457473165290251 0.41194252937221392807 0.56276262843989288687 1.0656525609666958054 1.221330972221571276 0.044184773996520557149 -0.73896423662003729582 -0.38135529272017137936 -0.92609026366440383438 0.030520497789835225599;0.47672672986947589591 0.38345748802766732588 -0.75552555766037421403 0.68625152618858520359 -0.79829882321888645524 -0.52374944153822722281 -0.76915110862590496676 -0.2041701768769785541 0.10086967628758058968 -0.39246333895737406383;0.32236493530657900353 0.0084382184863040742007 -0.045198531503274810839 0.25924914000500787203 -0.51447323492967711456 0.39578707586251105077 -0.99534940597122467665 -0.078613817337150393438 0.82597426334786550051 0.12861700163421693754;-0.28065760741068584982 -0.39055754822330301934 -0.72037226270039222964 -0.30650842197893207741 0.42683025515379230397 -0.11134574864145066475 0.30290671108085126528 0.97684720577704120537 0.6418384348289313257 -1.0659661395866055766];

% Layer 3
b3 = 0.38937311374115446405;
LW3_2 = [0.015999266232512930619 -0.32789825720376158946 -0.77423039630188805749 -0.44255965917549011657 -0.14081960681473223995 -0.21918736825248957834 1.0704656315720861848 -0.19122965560674407004 -0.3169170909579231421 0.022137788985091968325];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 19.9999999999994;
y1_step1.xoffset = -0.0500000000000016;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
